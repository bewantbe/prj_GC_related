%!PS-Adobe-2.0 EPSF-2.0
%%Title: pic_tmp/case=C.2a_ST_srd(82)On77_STC.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Nov 16 04:59:10 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -146 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (pic_tmp/case=C.2a_ST_srd\(82\)On77_STC.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (xyy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 16 04:59:10 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 440 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
2684 1848 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 1848 M
[ [({}) 440.0 0.0 true true 0 (-0.004)]
] -146.7 MRshow
0.500 UL
LTb
2684 2892 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 2892 M
[ [({}) 440.0 0.0 true true 0 (-0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 3936 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 3936 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MRshow
0.500 UL
LTb
2684 4980 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 4980 M
[ [({}) 440.0 0.0 true true 0 (0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 6023 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 6023 M
[ [({}) 440.0 0.0 true true 0 (0.004)]
] -146.7 MRshow
0.500 UL
LTb
2684 7067 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 7067 M
[ [({}) 440.0 0.0 true true 0 (0.006)]
] -146.7 MRshow
0.500 UL
LTb
2684 8111 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 8111 M
[ [({}) 440.0 0.0 true true 0 (0.008)]
] -146.7 MRshow
0.500 UL
LTb
2684 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 2684 1408 M
[ [({}) 440.0 0.0 true true 0 (-40)]
] -146.7 MCshow
0.500 UL
LTb
4025 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 4025 1408 M
[ [({}) 440.0 0.0 true true 0 (-20)]
] -146.7 MCshow
0.500 UL
LTb
5365 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 5365 1408 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MCshow
0.500 UL
LTb
6706 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 6706 1408 M
[ [({}) 440.0 0.0 true true 0 (20)]
] -146.7 MCshow
0.500 UL
LTb
8046 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 8046 1408 M
[ [({}) 440.0 0.0 true true 0 (40)]
] -146.7 MCshow
0.500 UL
LTb
9387 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 9387 1408 M
[ [({}) 440.0 0.0 true true 0 (60)]
] -146.7 MCshow
0.500 UL
LTb
10727 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 10727 1408 M
[ [({}) 440.0 0.0 true true 0 (80)]
] -146.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
2684 8111 N
0 -6263 V
8043 0 V
0 6263 V
-8043 0 V
Z stroke
0.00 0.00 0.00 C 352 4979 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 440.0 0.0 true true 0 (e)]
XYsave
[({}) 352.0 220.0 true true 0 (A)]
XYrestore
[({}) 352.0 -132.0 true true 0 (82|77)]
[({}) 440.0 0.0 true true 0 (\(t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (\))]
] -146.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6705 748 M
[ [({}) 440.0 0.0 true true 0 (t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (/ms)]
] -102.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
3.000 UL
LT0
1.00 0.00 0.00 C 5365 4990 Crs
% End plot #1
% Begin plot #2
2.000 UP
3.000 UL
LT0
0.00 0.00 1.00 C 3723 4104 M
33 243 V
34 -631 V
33 -338 V
34 728 V
33 -690 V
34 668 V
33 -264 V
34 -110 V
34 347 V
33 -456 V
34 -286 V
33 1128 V
34 -1061 V
33 695 V
34 -348 V
33 -28 V
34 -478 V
33 241 V
34 30 V
33 340 V
34 81 V
33 182 V
34 913 V
33 -762 V
34 405 V
33 -108 V
34 -82 V
33 -404 V
34 -59 V
33 -125 V
34 421 V
33 -168 V
34 86 V
33 -607 V
34 245 V
33 -112 V
34 -102 V
33 -403 V
34 15 V
33 58 V
34 -122 V
33 -345 V
34 -540 V
33 569 V
34 -218 V
33 -311 V
34 -174 V
33 638 V
34 2185 V
34 2609 V
33 -1120 V
34 222 V
33 -579 V
34 -726 V
33 488 V
34 -682 V
33 -451 V
34 -410 V
33 -47 V
34 304 V
33 -460 V
34 283 V
33 -537 V
34 158 V
33 471 V
34 -466 V
33 -763 V
34 -184 V
33 568 V
34 -425 V
33 -27 V
34 72 V
33 -136 V
34 256 V
33 -511 V
34 1838 V
33 -1077 V
34 -426 V
33 919 V
34 -732 V
33 777 V
34 -211 V
33 141 V
34 -224 V
33 -272 V
34 542 V
33 414 V
34 -366 V
34 450 V
33 -279 V
34 266 V
33 -639 V
34 -326 V
33 -229 V
34 69 V
33 580 V
34 35 V
33 -65 V
34 -44 V
33 555 V
34 -298 V
33 -907 V
34 -27 V
33 425 V
stroke 7208 3786 M
34 411 V
33 -238 V
34 337 V
33 -187 V
34 -252 V
33 -388 V
34 384 V
33 -233 V
34 240 V
33 633 V
34 -391 V
33 -162 V
34 595 V
33 -29 V
34 -953 V
33 398 V
34 -484 V
33 366 V
34 -283 V
33 123 V
34 140 V
33 424 V
34 -219 V
33 -112 V
34 -583 V
34 696 V
33 753 V
34 -1041 V
33 -122 V
34 277 V
33 410 V
34 365 V
33 -758 V
34 -285 V
33 160 V
34 44 V
33 912 V
34 -49 V
33 -975 V
34 -28 V
33 -330 V
34 157 V
33 138 V
34 104 V
33 431 V
34 -1055 V
33 -107 V
34 561 V
33 427 V
34 -422 V
33 758 V
34 -71 V
33 457 V
34 -288 V
33 72 V
34 -722 V
33 308 V
34 -417 V
33 419 V
34 20 V
33 -706 V
34 362 V
33 339 V
34 -207 V
34 644 V
33 -446 V
34 -254 V
33 -374 V
34 226 V
33 46 V
34 73 V
33 -163 V
34 36 V
33 519 V
34 -315 V
33 127 V
34 602 V
33 -539 V
34 -225 V
33 54 V
34 210 V
33 -393 V
34 111 V
33 207 V
34 54 V
33 -275 V
34 -337 V
33 856 V
34 51 V
33 -669 V
34 284 V
33 105 V
34 -932 V
33 849 V
34 191 V
3723 4104 Pls
3756 4347 Pls
3790 3716 Pls
3823 3378 Pls
3857 4106 Pls
3890 3416 Pls
3924 4084 Pls
3957 3820 Pls
3991 3710 Pls
4025 4057 Pls
4058 3601 Pls
4092 3315 Pls
4125 4443 Pls
4159 3382 Pls
4192 4077 Pls
4226 3729 Pls
4259 3701 Pls
4293 3223 Pls
4326 3464 Pls
4360 3494 Pls
4393 3834 Pls
4427 3915 Pls
4460 4097 Pls
4494 5010 Pls
4527 4248 Pls
4561 4653 Pls
4594 4545 Pls
4628 4463 Pls
4661 4059 Pls
4695 4000 Pls
4728 3875 Pls
4762 4296 Pls
4795 4128 Pls
4829 4214 Pls
4862 3607 Pls
4896 3852 Pls
4929 3740 Pls
4963 3638 Pls
4996 3235 Pls
5030 3250 Pls
5063 3308 Pls
5097 3186 Pls
5130 2841 Pls
5164 2301 Pls
5197 2870 Pls
5231 2652 Pls
5264 2341 Pls
5298 2167 Pls
5331 2805 Pls
5365 4990 Pls
5399 7599 Pls
5432 6479 Pls
5466 6701 Pls
5499 6122 Pls
5533 5396 Pls
5566 5884 Pls
5600 5202 Pls
5633 4751 Pls
5667 4341 Pls
5700 4294 Pls
5734 4598 Pls
5767 4138 Pls
5801 4421 Pls
5834 3884 Pls
5868 4042 Pls
5901 4513 Pls
5935 4047 Pls
5968 3284 Pls
6002 3100 Pls
6035 3668 Pls
6069 3243 Pls
6102 3216 Pls
6136 3288 Pls
6169 3152 Pls
6203 3408 Pls
6236 2897 Pls
6270 4735 Pls
6303 3658 Pls
6337 3232 Pls
6370 4151 Pls
6404 3419 Pls
6437 4196 Pls
6471 3985 Pls
6504 4126 Pls
6538 3902 Pls
6571 3630 Pls
6605 4172 Pls
6638 4586 Pls
6672 4220 Pls
6706 4670 Pls
6739 4391 Pls
6773 4657 Pls
6806 4018 Pls
6840 3692 Pls
6873 3463 Pls
6907 3532 Pls
6940 4112 Pls
6974 4147 Pls
7007 4082 Pls
7041 4038 Pls
7074 4593 Pls
7108 4295 Pls
7141 3388 Pls
7175 3361 Pls
7208 3786 Pls
7242 4197 Pls
7275 3959 Pls
7309 4296 Pls
7342 4109 Pls
7376 3857 Pls
7409 3469 Pls
7443 3853 Pls
7476 3620 Pls
7510 3860 Pls
7543 4493 Pls
7577 4102 Pls
7610 3940 Pls
7644 4535 Pls
7677 4506 Pls
7711 3553 Pls
7744 3951 Pls
7778 3467 Pls
7811 3833 Pls
7845 3550 Pls
7878 3673 Pls
7912 3813 Pls
7945 4237 Pls
7979 4018 Pls
8012 3906 Pls
8046 3323 Pls
8080 4019 Pls
8113 4772 Pls
8147 3731 Pls
8180 3609 Pls
8214 3886 Pls
8247 4296 Pls
8281 4661 Pls
8314 3903 Pls
8348 3618 Pls
8381 3778 Pls
8415 3822 Pls
8448 4734 Pls
8482 4685 Pls
8515 3710 Pls
8549 3682 Pls
8582 3352 Pls
8616 3509 Pls
8649 3647 Pls
8683 3751 Pls
8716 4182 Pls
8750 3127 Pls
8783 3020 Pls
8817 3581 Pls
8850 4008 Pls
8884 3586 Pls
8917 4344 Pls
8951 4273 Pls
8984 4730 Pls
9018 4442 Pls
9051 4514 Pls
9085 3792 Pls
9118 4100 Pls
9152 3683 Pls
9185 4102 Pls
9219 4122 Pls
9252 3416 Pls
9286 3778 Pls
9319 4117 Pls
9353 3910 Pls
9387 4554 Pls
9420 4108 Pls
9454 3854 Pls
9487 3480 Pls
9521 3706 Pls
9554 3752 Pls
9588 3825 Pls
9621 3662 Pls
9655 3698 Pls
9688 4217 Pls
9722 3902 Pls
9755 4029 Pls
9789 4631 Pls
9822 4092 Pls
9856 3867 Pls
9889 3921 Pls
9923 4131 Pls
9956 3738 Pls
9990 3849 Pls
10023 4056 Pls
10057 4110 Pls
10090 3835 Pls
10124 3498 Pls
10157 4354 Pls
10191 4405 Pls
10224 3736 Pls
10258 4020 Pls
10291 4125 Pls
10325 3193 Pls
10358 4042 Pls
10392 4233 Pls
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
