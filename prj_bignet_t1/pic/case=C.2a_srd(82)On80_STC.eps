%!PS-Adobe-2.0 EPSF-2.0
%%Title: pic_tmp/case=C.2a_srd(82)to80_STC.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Nov 16 04:15:14 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -146 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (pic_tmp/case=C.2a_srd\(82\)to80_STC.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (xyy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 16 04:15:14 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 440 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
2684 1848 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 1848 M
[ [({}) 440.0 0.0 true true 0 (-0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 2743 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 2743 M
[ [({}) 440.0 0.0 true true 0 (-0.001)]
] -146.7 MRshow
0.500 UL
LTb
2684 3637 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 3637 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MRshow
0.500 UL
LTb
2684 4532 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 4532 M
[ [({}) 440.0 0.0 true true 0 (0.001)]
] -146.7 MRshow
0.500 UL
LTb
2684 5427 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 5427 M
[ [({}) 440.0 0.0 true true 0 (0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 6322 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 6322 M
[ [({}) 440.0 0.0 true true 0 (0.003)]
] -146.7 MRshow
0.500 UL
LTb
2684 7216 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 7216 M
[ [({}) 440.0 0.0 true true 0 (0.004)]
] -146.7 MRshow
0.500 UL
LTb
2684 8111 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 8111 M
[ [({}) 440.0 0.0 true true 0 (0.005)]
] -146.7 MRshow
0.500 UL
LTb
2684 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 2684 1408 M
[ [({}) 440.0 0.0 true true 0 (-40)]
] -146.7 MCshow
0.500 UL
LTb
4025 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 4025 1408 M
[ [({}) 440.0 0.0 true true 0 (-20)]
] -146.7 MCshow
0.500 UL
LTb
5365 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 5365 1408 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MCshow
0.500 UL
LTb
6706 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 6706 1408 M
[ [({}) 440.0 0.0 true true 0 (20)]
] -146.7 MCshow
0.500 UL
LTb
8046 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 8046 1408 M
[ [({}) 440.0 0.0 true true 0 (40)]
] -146.7 MCshow
0.500 UL
LTb
9387 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 9387 1408 M
[ [({}) 440.0 0.0 true true 0 (60)]
] -146.7 MCshow
0.500 UL
LTb
10727 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 10727 1408 M
[ [({}) 440.0 0.0 true true 0 (80)]
] -146.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
2684 8111 N
0 -6263 V
8043 0 V
0 6263 V
-8043 0 V
Z stroke
0.00 0.00 0.00 C 352 4979 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 440.0 0.0 true true 0 (e)]
XYsave
[({}) 352.0 220.0 true true 0 (A)]
XYrestore
[({}) 352.0 -132.0 true true 0 (82|80)]
[({}) 440.0 0.0 true true 0 (\(t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (\))]
] -146.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6705 748 M
[ [({}) 440.0 0.0 true true 0 (t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (/ms)]
] -102.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
3.000 UL
LT0
1.00 0.00 0.00 C 5365 7637 Crs
% End plot #1
% Begin plot #2
2.000 UP
3.000 UL
LT0
0.00 0.00 1.00 C 3723 4122 M
33 -851 V
34 217 V
33 -906 V
34 1897 V
33 -1183 V
34 -101 V
33 708 V
34 -436 V
34 51 V
33 -295 V
34 569 V
33 -1011 V
34 344 V
33 242 V
34 -131 V
33 447 V
34 417 V
33 220 V
34 -105 V
33 462 V
34 317 V
33 -758 V
34 209 V
33 -736 V
34 -231 V
33 30 V
34 1328 V
33 -986 V
34 192 V
33 -702 V
34 -667 V
33 214 V
34 -929 V
33 769 V
34 -363 V
33 312 V
34 -754 V
33 626 V
34 401 V
33 204 V
34 -508 V
33 865 V
34 -304 V
33 491 V
34 858 V
33 166 V
34 137 V
33 1448 V
34 1331 V
34 -2934 V
33 -1133 V
34 129 V
33 166 V
34 311 V
33 -263 V
34 -159 V
33 -105 V
34 -57 V
33 -43 V
34 64 V
33 -62 V
34 -500 V
33 -61 V
34 391 V
33 721 V
34 -252 V
33 301 V
34 -284 V
33 142 V
34 -304 V
33 260 V
34 -948 V
33 444 V
34 370 V
33 -168 V
34 239 V
33 -742 V
34 51 V
33 668 V
34 294 V
33 -684 V
34 225 V
33 -454 V
34 153 V
33 -406 V
34 340 V
33 205 V
34 -709 V
34 -207 V
33 1071 V
34 -295 V
33 89 V
34 841 V
33 -810 V
34 1009 V
33 -881 V
34 -183 V
33 462 V
34 269 V
33 -850 V
34 -156 V
33 -722 V
34 1672 V
33 -723 V
stroke 7208 3429 M
34 685 V
33 -810 V
34 780 V
33 301 V
34 -495 V
33 -896 V
34 -480 V
33 1479 V
34 -438 V
33 -175 V
34 268 V
33 281 V
34 -151 V
33 -316 V
34 -104 V
33 -75 V
34 391 V
33 -390 V
34 359 V
33 -255 V
34 722 V
33 -735 V
34 490 V
33 -586 V
34 364 V
34 -403 V
33 -139 V
34 1430 V
33 -826 V
34 -138 V
33 -135 V
34 -317 V
33 505 V
34 258 V
33 262 V
34 -1115 V
33 1036 V
34 -628 V
33 436 V
34 -641 V
33 831 V
34 -651 V
33 611 V
34 -984 V
33 227 V
34 83 V
33 733 V
34 -880 V
33 239 V
34 1361 V
33 -2103 V
34 1455 V
33 -843 V
34 30 V
33 -111 V
34 257 V
33 34 V
34 36 V
33 184 V
34 91 V
33 471 V
34 -599 V
33 165 V
34 -377 V
34 309 V
33 439 V
34 -681 V
33 135 V
34 119 V
33 53 V
34 -757 V
33 -60 V
34 801 V
33 679 V
34 -524 V
33 -416 V
34 280 V
33 -964 V
34 793 V
33 -480 V
34 -303 V
33 -280 V
34 1111 V
33 -935 V
34 1556 V
33 -243 V
34 -983 V
33 759 V
34 300 V
33 -1550 V
34 1513 V
33 237 V
34 -1122 V
33 1027 V
34 -184 V
3723 4122 Pls
3756 3271 Pls
3790 3488 Pls
3823 2582 Pls
3857 4479 Pls
3890 3296 Pls
3924 3195 Pls
3957 3903 Pls
3991 3467 Pls
4025 3518 Pls
4058 3223 Pls
4092 3792 Pls
4125 2781 Pls
4159 3125 Pls
4192 3367 Pls
4226 3236 Pls
4259 3683 Pls
4293 4100 Pls
4326 4320 Pls
4360 4215 Pls
4393 4677 Pls
4427 4994 Pls
4460 4236 Pls
4494 4445 Pls
4527 3709 Pls
4561 3478 Pls
4594 3508 Pls
4628 4836 Pls
4661 3850 Pls
4695 4042 Pls
4728 3340 Pls
4762 2673 Pls
4795 2887 Pls
4829 1958 Pls
4862 2727 Pls
4896 2364 Pls
4929 2676 Pls
4963 1922 Pls
4996 2548 Pls
5030 2949 Pls
5063 3153 Pls
5097 2645 Pls
5130 3510 Pls
5164 3206 Pls
5197 3697 Pls
5231 4555 Pls
5264 4721 Pls
5298 4858 Pls
5331 6306 Pls
5365 7637 Pls
5399 4703 Pls
5432 3570 Pls
5466 3699 Pls
5499 3865 Pls
5533 4176 Pls
5566 3913 Pls
5600 3754 Pls
5633 3649 Pls
5667 3592 Pls
5700 3549 Pls
5734 3613 Pls
5767 3551 Pls
5801 3051 Pls
5834 2990 Pls
5868 3381 Pls
5901 4102 Pls
5935 3850 Pls
5968 4151 Pls
6002 3867 Pls
6035 4009 Pls
6069 3705 Pls
6102 3965 Pls
6136 3017 Pls
6169 3461 Pls
6203 3831 Pls
6236 3663 Pls
6270 3902 Pls
6303 3160 Pls
6337 3211 Pls
6370 3879 Pls
6404 4173 Pls
6437 3489 Pls
6471 3714 Pls
6504 3260 Pls
6538 3413 Pls
6571 3007 Pls
6605 3347 Pls
6638 3552 Pls
6672 2843 Pls
6706 2636 Pls
6739 3707 Pls
6773 3412 Pls
6806 3501 Pls
6840 4342 Pls
6873 3532 Pls
6907 4541 Pls
6940 3660 Pls
6974 3477 Pls
7007 3939 Pls
7041 4208 Pls
7074 3358 Pls
7108 3202 Pls
7141 2480 Pls
7175 4152 Pls
7208 3429 Pls
7242 4114 Pls
7275 3304 Pls
7309 4084 Pls
7342 4385 Pls
7376 3890 Pls
7409 2994 Pls
7443 2514 Pls
7476 3993 Pls
7510 3555 Pls
7543 3380 Pls
7577 3648 Pls
7610 3929 Pls
7644 3778 Pls
7677 3462 Pls
7711 3358 Pls
7744 3283 Pls
7778 3674 Pls
7811 3284 Pls
7845 3643 Pls
7878 3388 Pls
7912 4110 Pls
7945 3375 Pls
7979 3865 Pls
8012 3279 Pls
8046 3643 Pls
8080 3240 Pls
8113 3101 Pls
8147 4531 Pls
8180 3705 Pls
8214 3567 Pls
8247 3432 Pls
8281 3115 Pls
8314 3620 Pls
8348 3878 Pls
8381 4140 Pls
8415 3025 Pls
8448 4061 Pls
8482 3433 Pls
8515 3869 Pls
8549 3228 Pls
8582 4059 Pls
8616 3408 Pls
8649 4019 Pls
8683 3035 Pls
8716 3262 Pls
8750 3345 Pls
8783 4078 Pls
8817 3198 Pls
8850 3437 Pls
8884 4798 Pls
8917 2695 Pls
8951 4150 Pls
8984 3307 Pls
9018 3337 Pls
9051 3226 Pls
9085 3483 Pls
9118 3517 Pls
9152 3553 Pls
9185 3737 Pls
9219 3828 Pls
9252 4299 Pls
9286 3700 Pls
9319 3865 Pls
9353 3488 Pls
9387 3797 Pls
9420 4236 Pls
9454 3555 Pls
9487 3690 Pls
9521 3809 Pls
9554 3862 Pls
9588 3105 Pls
9621 3045 Pls
9655 3846 Pls
9688 4525 Pls
9722 4001 Pls
9755 3585 Pls
9789 3865 Pls
9822 2901 Pls
9856 3694 Pls
9889 3214 Pls
9923 2911 Pls
9956 2631 Pls
9990 3742 Pls
10023 2807 Pls
10057 4363 Pls
10090 4120 Pls
10124 3137 Pls
10157 3896 Pls
10191 4196 Pls
10224 2646 Pls
10258 4159 Pls
10291 4396 Pls
10325 3274 Pls
10358 4301 Pls
10392 4117 Pls
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
