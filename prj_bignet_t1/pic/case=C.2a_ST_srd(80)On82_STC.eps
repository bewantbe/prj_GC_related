%!PS-Adobe-2.0 EPSF-2.0
%%Title: pic_tmp/case=C.2a_ST_srd(80)On82_STC.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Nov 16 05:00:48 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -146 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (pic_tmp/case=C.2a_ST_srd\(80\)On82_STC.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (xyy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 16 05:00:48 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 440 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
2684 1848 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 1848 M
[ [({}) 440.0 0.0 true true 0 (-0.004)]
] -146.7 MRshow
0.500 UL
LTb
2684 2743 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 2743 M
[ [({}) 440.0 0.0 true true 0 (-0.003)]
] -146.7 MRshow
0.500 UL
LTb
2684 3637 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 3637 M
[ [({}) 440.0 0.0 true true 0 (-0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 4532 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 4532 M
[ [({}) 440.0 0.0 true true 0 (-0.001)]
] -146.7 MRshow
0.500 UL
LTb
2684 5427 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 5427 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MRshow
0.500 UL
LTb
2684 6322 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 6322 M
[ [({}) 440.0 0.0 true true 0 (0.001)]
] -146.7 MRshow
0.500 UL
LTb
2684 7216 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 7216 M
[ [({}) 440.0 0.0 true true 0 (0.002)]
] -146.7 MRshow
0.500 UL
LTb
2684 8111 M
88 0 V
7955 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 2420 8111 M
[ [({}) 440.0 0.0 true true 0 (0.003)]
] -146.7 MRshow
0.500 UL
LTb
2684 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 2684 1408 M
[ [({}) 440.0 0.0 true true 0 (-40)]
] -146.7 MCshow
0.500 UL
LTb
4025 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 4025 1408 M
[ [({}) 440.0 0.0 true true 0 (-20)]
] -146.7 MCshow
0.500 UL
LTb
5365 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 5365 1408 M
[ [({}) 440.0 0.0 true true 0 (0)]
] -146.7 MCshow
0.500 UL
LTb
6706 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 6706 1408 M
[ [({}) 440.0 0.0 true true 0 (20)]
] -146.7 MCshow
0.500 UL
LTb
8046 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 8046 1408 M
[ [({}) 440.0 0.0 true true 0 (40)]
] -146.7 MCshow
0.500 UL
LTb
9387 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 9387 1408 M
[ [({}) 440.0 0.0 true true 0 (60)]
] -146.7 MCshow
0.500 UL
LTb
10727 1848 M
0 88 V
0 6175 R
0 -88 V
stroke
0.00 0.00 0.00 C 10727 1408 M
[ [({}) 440.0 0.0 true true 0 (80)]
] -146.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
2684 8111 N
0 -6263 V
8043 0 V
0 6263 V
-8043 0 V
Z stroke
0.00 0.00 0.00 C 352 4979 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 440.0 0.0 true true 0 (e)]
XYsave
[({}) 352.0 220.0 true true 0 (A)]
XYrestore
[({}) 352.0 -132.0 true true 0 (80|82)]
[({}) 440.0 0.0 true true 0 (\(t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (\))]
] -146.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6705 748 M
[ [({}) 440.0 0.0 true true 0 (t)]
[({}) 352.0 -132.0 true true 0 (rel)]
[({}) 440.0 0.0 true true 0 (/ms)]
] -102.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
3.000 UL
LT0
1.00 0.00 0.00 C 5365 4991 Crs
% End plot #1
% Begin plot #2
2.000 UP
3.000 UL
LT0
0.00 0.00 1.00 C 3723 4643 M
33 852 V
34 293 V
33 -532 V
34 -971 V
33 1133 V
34 -733 V
33 302 V
34 507 V
34 -885 V
33 1832 V
34 -773 V
33 -259 V
34 622 V
33 59 V
34 100 V
33 -464 V
34 51 V
33 -141 V
34 -907 V
33 920 V
34 105 V
33 -238 V
34 -239 V
33 -313 V
34 88 V
33 203 V
34 513 V
33 -791 V
34 144 V
33 89 V
34 -750 V
33 -19 V
34 406 V
33 424 V
34 -8 V
33 1097 V
34 -374 V
33 85 V
34 405 V
33 -209 V
34 -129 V
33 675 V
34 -335 V
33 75 V
34 449 V
33 -1017 V
34 1330 V
33 -290 V
34 -2034 V
34 -2390 V
33 369 V
34 1323 V
33 -1203 V
34 544 V
33 859 V
34 -146 V
33 -422 V
34 1051 V
33 -819 V
34 119 V
33 998 V
34 437 V
33 -436 V
34 365 V
33 9 V
34 909 V
33 -530 V
34 205 V
33 -65 V
34 -785 V
33 -665 V
34 128 V
33 1847 V
34 -1235 V
33 432 V
34 -630 V
33 111 V
34 -752 V
33 -205 V
34 261 V
33 509 V
34 -804 V
33 1149 V
34 -202 V
33 641 V
34 -78 V
33 8 V
34 -625 V
34 460 V
33 -86 V
34 -343 V
33 231 V
34 87 V
33 -514 V
34 -664 V
33 2034 V
34 -1252 V
33 662 V
34 -1306 V
33 1048 V
34 -753 V
33 643 V
34 -1025 V
33 1554 V
stroke 7208 6049 M
34 472 V
33 -1290 V
34 390 V
33 -371 V
34 877 V
33 -1227 V
34 262 V
33 337 V
34 126 V
33 54 V
34 206 V
33 -78 V
34 -635 V
33 630 V
34 -375 V
33 -593 V
34 -26 V
33 534 V
34 507 V
33 -533 V
34 -54 V
33 162 V
34 129 V
33 130 V
34 599 V
34 -1237 V
33 90 V
34 -347 V
33 1170 V
34 -916 V
33 366 V
34 918 V
33 -901 V
34 -198 V
33 -642 V
34 90 V
33 1064 V
34 216 V
33 -664 V
34 350 V
33 -738 V
34 1370 V
33 -739 V
34 37 V
33 -255 V
34 471 V
33 -780 V
34 597 V
33 -8 V
34 71 V
33 -156 V
34 125 V
33 -70 V
34 316 V
33 279 V
34 -624 V
33 6 V
34 -248 V
33 -620 V
34 1182 V
33 -307 V
34 522 V
33 -27 V
34 -1449 V
34 112 V
33 1194 V
34 -334 V
33 -641 V
34 469 V
33 -750 V
34 335 V
33 936 V
34 483 V
33 -907 V
34 -887 V
33 807 V
34 -429 V
33 360 V
34 179 V
33 -111 V
34 389 V
33 426 V
34 -751 V
33 -957 V
34 473 V
33 983 V
34 -1103 V
33 1351 V
34 -397 V
33 -556 V
34 502 V
33 -397 V
34 -123 V
33 -65 V
34 1173 V
3723 4643 Pls
3756 5495 Pls
3790 5788 Pls
3823 5256 Pls
3857 4285 Pls
3890 5418 Pls
3924 4685 Pls
3957 4987 Pls
3991 5494 Pls
4025 4609 Pls
4058 6441 Pls
4092 5668 Pls
4125 5409 Pls
4159 6031 Pls
4192 6090 Pls
4226 6190 Pls
4259 5726 Pls
4293 5777 Pls
4326 5636 Pls
4360 4729 Pls
4393 5649 Pls
4427 5754 Pls
4460 5516 Pls
4494 5277 Pls
4527 4964 Pls
4561 5052 Pls
4594 5255 Pls
4628 5768 Pls
4661 4977 Pls
4695 5121 Pls
4728 5210 Pls
4762 4460 Pls
4795 4441 Pls
4829 4847 Pls
4862 5271 Pls
4896 5263 Pls
4929 6360 Pls
4963 5986 Pls
4996 6071 Pls
5030 6476 Pls
5063 6267 Pls
5097 6138 Pls
5130 6813 Pls
5164 6478 Pls
5197 6553 Pls
5231 7002 Pls
5264 5985 Pls
5298 7315 Pls
5331 7025 Pls
5365 4991 Pls
5399 2601 Pls
5432 2970 Pls
5466 4293 Pls
5499 3090 Pls
5533 3634 Pls
5566 4493 Pls
5600 4347 Pls
5633 3925 Pls
5667 4976 Pls
5700 4157 Pls
5734 4276 Pls
5767 5274 Pls
5801 5711 Pls
5834 5275 Pls
5868 5640 Pls
5901 5649 Pls
5935 6558 Pls
5968 6028 Pls
6002 6233 Pls
6035 6168 Pls
6069 5383 Pls
6102 4718 Pls
6136 4846 Pls
6169 6693 Pls
6203 5458 Pls
6236 5890 Pls
6270 5260 Pls
6303 5371 Pls
6337 4619 Pls
6370 4414 Pls
6404 4675 Pls
6437 5184 Pls
6471 4380 Pls
6504 5529 Pls
6538 5327 Pls
6571 5968 Pls
6605 5890 Pls
6638 5898 Pls
6672 5273 Pls
6706 5733 Pls
6739 5647 Pls
6773 5304 Pls
6806 5535 Pls
6840 5622 Pls
6873 5108 Pls
6907 4444 Pls
6940 6478 Pls
6974 5226 Pls
7007 5888 Pls
7041 4582 Pls
7074 5630 Pls
7108 4877 Pls
7141 5520 Pls
7175 4495 Pls
7208 6049 Pls
7242 6521 Pls
7275 5231 Pls
7309 5621 Pls
7342 5250 Pls
7376 6127 Pls
7409 4900 Pls
7443 5162 Pls
7476 5499 Pls
7510 5625 Pls
7543 5679 Pls
7577 5885 Pls
7610 5807 Pls
7644 5172 Pls
7677 5802 Pls
7711 5427 Pls
7744 4834 Pls
7778 4808 Pls
7811 5342 Pls
7845 5849 Pls
7878 5316 Pls
7912 5262 Pls
7945 5424 Pls
7979 5553 Pls
8012 5683 Pls
8046 6282 Pls
8080 5045 Pls
8113 5135 Pls
8147 4788 Pls
8180 5958 Pls
8214 5042 Pls
8247 5408 Pls
8281 6326 Pls
8314 5425 Pls
8348 5227 Pls
8381 4585 Pls
8415 4675 Pls
8448 5739 Pls
8482 5955 Pls
8515 5291 Pls
8549 5641 Pls
8582 4903 Pls
8616 6273 Pls
8649 5534 Pls
8683 5571 Pls
8716 5316 Pls
8750 5787 Pls
8783 5007 Pls
8817 5604 Pls
8850 5596 Pls
8884 5667 Pls
8917 5511 Pls
8951 5636 Pls
8984 5566 Pls
9018 5882 Pls
9051 6161 Pls
9085 5537 Pls
9118 5543 Pls
9152 5295 Pls
9185 4675 Pls
9219 5857 Pls
9252 5550 Pls
9286 6072 Pls
9319 6045 Pls
9353 4596 Pls
9387 4708 Pls
9420 5902 Pls
9454 5568 Pls
9487 4927 Pls
9521 5396 Pls
9554 4646 Pls
9588 4981 Pls
9621 5917 Pls
9655 6400 Pls
9688 5493 Pls
9722 4606 Pls
9755 5413 Pls
9789 4984 Pls
9822 5344 Pls
9856 5523 Pls
9889 5412 Pls
9923 5801 Pls
9956 6227 Pls
9990 5476 Pls
10023 4519 Pls
10057 4992 Pls
10090 5975 Pls
10124 4872 Pls
10157 6223 Pls
10191 5826 Pls
10224 5270 Pls
10258 5772 Pls
10291 5375 Pls
10325 5252 Pls
10358 5187 Pls
10392 6360 Pls
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
